                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.1 #15267 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	
                                      7 ;--------------------------------------------------------
                                      8 ; Public variables in this module
                                      9 ;--------------------------------------------------------
                                     10 	.globl _main
                                     11 	.globl _PrintSoundChannel3
                                     12 	.globl _Snd_PlayDrums
                                     13 	.globl _Snd_PlayMusic_V3
                                     14 	.globl _Snd_PlayMusic_V2
                                     15 	.globl _Snd_Update
                                     16 	.globl _Snd_Drum
                                     17 	.globl _Snd_Init
                                     18 	.globl _IN_WasKeyPressed
                                     19 	.globl _IN_Update
                                     20 	.globl _PrintNum8Hex
                                     21 	.globl _PrintNum8
                                     22 	.globl _PrintCentre
                                     23 	.globl _Print
                                     24 	.globl _ClrStripX
                                     25 	.globl _ClrScreen
                                     26 	.globl _SetTileData
                                     27 	.globl _wait_vbl_done
                                     28 	.globl _drumID
                                     29 ;--------------------------------------------------------
                                     30 ; special function registers
                                     31 ;--------------------------------------------------------
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DATA
                                     36 ;--------------------------------------------------------
                                     37 ; ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area _INITIALIZED
    00000000                         40 _drumID::
    00000000                         41 	.ds 1
                                     42 ;--------------------------------------------------------
                                     43 ; absolute external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area _DABS (ABS)
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area _HOME
                                     50 	.area _GSINIT
                                     51 	.area _GSFINAL
                                     52 	.area _GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area _HOME
                                     57 	.area _HOME
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area _CODE
                                     62 ;src/main.c:7: void PrintSoundChannel3()
                                     63 ;	---------------------------------
                                     64 ; Function PrintSoundChannel3
                                     65 ; ---------------------------------
    00000000                         66 _PrintSoundChannel3::
                                     67 ;src/main.c:10: ClrStripX(0,0,20);
    00000000 3E 14            [ 8]   68 	ld	a, #0x14
    00000002 F5               [16]   69 	push	af
    00000003 33               [ 8]   70 	inc	sp
    00000004 AF               [ 4]   71 	xor	a, a
    00000005 5F               [ 4]   72 	ld	e, a
    00000006 CDr00r00         [24]   73 	call	_ClrStripX
                                     74 ;src/main.c:11: ClrStripX(0,1,20);
    00000009 3E 14            [ 8]   75 	ld	a, #0x14
    0000000B F5               [16]   76 	push	af
    0000000C 33               [ 8]   77 	inc	sp
    0000000D 1E 01            [ 8]   78 	ld	e, #0x01
    0000000F AF               [ 4]   79 	xor	a, a
    00000010 CDr00r00         [24]   80 	call	_ClrStripX
                                     81 ;src/main.c:12: PrintNum8Hex(pos,0,SndInBVar0);
    00000013 FAr00r00         [16]   82 	ld	a, (_SndInBVar0)
    00000016 F5               [16]   83 	push	af
    00000017 33               [ 8]   84 	inc	sp
    00000018 1E 00            [ 8]   85 	ld	e, #0x00
    0000001A 3E 01            [ 8]   86 	ld	a, #0x01
    0000001C CDr00r00         [24]   87 	call	_PrintNum8Hex
                                     88 ;src/main.c:14: PrintNum8Hex(pos,0,SndInBVar1);
    0000001F FAr00r00         [16]   89 	ld	a, (_SndInBVar1)
    00000022 F5               [16]   90 	push	af
    00000023 33               [ 8]   91 	inc	sp
    00000024 1E 00            [ 8]   92 	ld	e, #0x00
    00000026 3E 04            [ 8]   93 	ld	a, #0x04
    00000028 CDr00r00         [24]   94 	call	_PrintNum8Hex
                                     95 ;src/main.c:16: PrintNum8Hex(pos,0,SndInBVar2);
    0000002B FAr00r00         [16]   96 	ld	a, (_SndInBVar2)
    0000002E F5               [16]   97 	push	af
    0000002F 33               [ 8]   98 	inc	sp
    00000030 1E 00            [ 8]   99 	ld	e, #0x00
    00000032 3E 07            [ 8]  100 	ld	a, #0x07
    00000034 CDr00r00         [24]  101 	call	_PrintNum8Hex
                                    102 ;src/main.c:18: PrintNum8Hex(pos,0,SndInBVar3);
    00000037 FAr00r00         [16]  103 	ld	a, (_SndInBVar3)
    0000003A F5               [16]  104 	push	af
    0000003B 33               [ 8]  105 	inc	sp
    0000003C 1E 00            [ 8]  106 	ld	e, #0x00
    0000003E 3E 0A            [ 8]  107 	ld	a, #0x0a
    00000040 CDr00r00         [24]  108 	call	_PrintNum8Hex
                                    109 ;src/main.c:20: PrintNum8Hex(pos,0,SndInBVar4);
    00000043 FAr00r00         [16]  110 	ld	a, (_SndInBVar4)
    00000046 F5               [16]  111 	push	af
    00000047 33               [ 8]  112 	inc	sp
    00000048 1E 00            [ 8]  113 	ld	e, #0x00
    0000004A 3E 0D            [ 8]  114 	ld	a, #0x0d
    0000004C CDr00r00         [24]  115 	call	_PrintNum8Hex
                                    116 ;src/main.c:21: }
    0000004F C9               [16]  117 	ret
                                    118 ;src/main.c:23: void main(void)
                                    119 ;	---------------------------------
                                    120 ; Function main
                                    121 ; ---------------------------------
    00000050                        122 _main::
                                    123 ;src/main.c:26: SetTileData(GFX_TS_FONT,GFX_TC_FONT,gfxFont);
    00000050 11r00r00         [12]  124 	ld	de, #_gfxFont
    00000053 D5               [16]  125 	push	de
    00000054 1E 80            [ 8]  126 	ld	e, #0x80
    00000056 AF               [ 4]  127 	xor	a, a
    00000057 CDr00r00         [24]  128 	call	_SetTileData
                                    129 ;src/main.c:27: Snd_Init();
    0000005A CDr00r00         [24]  130 	call	_Snd_Init
                                    131 ;src/main.c:28: ClrScreen();
    0000005D CDr00r00         [24]  132 	call	_ClrScreen
                                    133 ;src/main.c:29: DISPLAY_ON;
    00000060 F0r00            [12]  134 	ldh	a, (_LCDC_REG + 0)
    00000062 F6 80            [ 8]  135 	or	a, #0x80
    00000064 E0r00            [12]  136 	ldh	(_LCDC_REG + 0), a
                                    137 ;src/main.c:30: SHOW_BKG;
    00000066 F0r00            [12]  138 	ldh	a, (_LCDC_REG + 0)
    00000068 F6 01            [ 8]  139 	or	a, #0x01
    0000006A E0r00            [12]  140 	ldh	(_LCDC_REG + 0), a
                                    141 ;src/main.c:31: Print(0,4,"Drum ID=");
    0000006C 11rA7r01         [12]  142 	ld	de, #___str_0
    0000006F D5               [16]  143 	push	de
    00000070 1E 04            [ 8]  144 	ld	e, #0x04
    00000072 AF               [ 4]  145 	xor	a, a
    00000073 CDr00r00         [24]  146 	call	_Print
                                    147 ;src/main.c:32: PrintNum8(9,4,drumID);
    00000076 FAr00r00         [16]  148 	ld	a, (_drumID)
    00000079 F5               [16]  149 	push	af
    0000007A 33               [ 8]  150 	inc	sp
    0000007B 1E 04            [ 8]  151 	ld	e, #0x04
    0000007D 3E 09            [ 8]  152 	ld	a, #0x09
    0000007F CDr00r00         [24]  153 	call	_PrintNum8
                                    154 ;src/main.c:33: Print(0,5,"Press START for Drums");
    00000082 11rB0r01         [12]  155 	ld	de, #___str_1
    00000085 D5               [16]  156 	push	de
    00000086 1E 05            [ 8]  157 	ld	e, #0x05
    00000088 AF               [ 4]  158 	xor	a, a
    00000089 CDr00r00         [24]  159 	call	_Print
                                    160 ;src/main.c:34: Print(0,6,"Press A for tune 1");
    0000008C 11rC6r01         [12]  161 	ld	de, #___str_2
    0000008F D5               [16]  162 	push	de
    00000090 1E 06            [ 8]  163 	ld	e, #0x06
    00000092 AF               [ 4]  164 	xor	a, a
    00000093 CDr00r00         [24]  165 	call	_Print
                                    166 ;src/main.c:35: Print(0,7,"Press B for tune 2");
    00000096 11rD9r01         [12]  167 	ld	de, #___str_3
    00000099 D5               [16]  168 	push	de
    0000009A 1E 07            [ 8]  169 	ld	e, #0x07
    0000009C AF               [ 4]  170 	xor	a, a
    0000009D CDr00r00         [24]  171 	call	_Print
                                    172 ;src/main.c:36: Print(0,8,"Press SELECT for the");
    000000A0 11rECr01         [12]  173 	ld	de, #___str_4
    000000A3 D5               [16]  174 	push	de
    000000A4 1E 08            [ 8]  175 	ld	e, #0x08
    000000A6 AF               [ 4]  176 	xor	a, a
    000000A7 CDr00r00         [24]  177 	call	_Print
                                    178 ;src/main.c:37: Print(0,9,"Drum Track");
    000000AA 11r01r02         [12]  179 	ld	de, #___str_5
    000000AD D5               [16]  180 	push	de
    000000AE 1E 09            [ 8]  181 	ld	e, #0x09
    000000B0 AF               [ 4]  182 	xor	a, a
    000000B1 CDr00r00         [24]  183 	call	_Print
                                    184 ;src/main.c:38: Print(0,10,"Press Up for tune 3");
    000000B4 11r0Cr02         [12]  185 	ld	de, #___str_6
    000000B7 D5               [16]  186 	push	de
    000000B8 1E 0A            [ 8]  187 	ld	e, #0x0a
    000000BA AF               [ 4]  188 	xor	a, a
    000000BB CDr00r00         [24]  189 	call	_Print
                                    190 ;src/main.c:40: while(1)
    000000BE                        191 00123$:
                                    192 ;src/main.c:42: IN_Update();
    000000BE CDr00r00         [24]  193 	call	_IN_Update
                                    194 ;src/main.c:43: if(IN_WasKeyPressed(J_LEFT))
    000000C1 3E 02            [ 8]  195 	ld	a, #0x02
    000000C3 CDr00r00         [24]  196 	call	_IN_WasKeyPressed
    000000C6 CB 47            [ 8]  197 	bit	0,a
    000000C8 28 21            [12]  198 	jr	Z, 00108$
                                    199 ;src/main.c:45: if(drumID>0)
    000000CA 21r00r00         [12]  200 	ld	hl, #_drumID
    000000CD 7E               [ 8]  201 	ld	a, (hl)
    000000CE B7               [ 4]  202 	or	a, a
    000000CF 28 01            [12]  203 	jr	Z, 00102$
                                    204 ;src/main.c:46: --drumID;
    000000D1 35               [12]  205 	dec	(hl)
    000000D2                        206 00102$:
                                    207 ;src/main.c:47: ClrStripX(9,4,4);
    000000D2 3E 04            [ 8]  208 	ld	a, #0x04
    000000D4 F5               [16]  209 	push	af
    000000D5 33               [ 8]  210 	inc	sp
    000000D6 1E 04            [ 8]  211 	ld	e, #0x04
    000000D8 3E 09            [ 8]  212 	ld	a, #0x09
    000000DA CDr00r00         [24]  213 	call	_ClrStripX
                                    214 ;src/main.c:48: PrintNum8(9,4,drumID);
    000000DD FAr00r00         [16]  215 	ld	a, (_drumID)
    000000E0 F5               [16]  216 	push	af
    000000E1 33               [ 8]  217 	inc	sp
    000000E2 1E 04            [ 8]  218 	ld	e, #0x04
    000000E4 3E 09            [ 8]  219 	ld	a, #0x09
    000000E6 CDr00r00         [24]  220 	call	_PrintNum8
    000000E9 18 29            [12]  221 	jr	00109$
    000000EB                        222 00108$:
                                    223 ;src/main.c:50: else if(IN_WasKeyPressed(J_RIGHT))
    000000EB 3E 01            [ 8]  224 	ld	a, #0x01
    000000ED CDr00r00         [24]  225 	call	_IN_WasKeyPressed
    000000F0 CB 47            [ 8]  226 	bit	0,a
    000000F2 28 20            [12]  227 	jr	Z, 00109$
                                    228 ;src/main.c:52: if(drumID<eSD_MAX_DRUMSOUND-1)
    000000F4 21r00r00         [12]  229 	ld	hl, #_drumID
    000000F7 7E               [ 8]  230 	ld	a, (hl)
    000000F8 D6 0A            [ 8]  231 	sub	a, #0x0a
    000000FA 30 01            [12]  232 	jr	NC, 00104$
                                    233 ;src/main.c:53: ++drumID;
    000000FC 34               [12]  234 	inc	(hl)
    000000FD                        235 00104$:
                                    236 ;src/main.c:54: ClrStripX(9,4,4);
    000000FD 3E 04            [ 8]  237 	ld	a, #0x04
    000000FF F5               [16]  238 	push	af
    00000100 33               [ 8]  239 	inc	sp
    00000101 1E 04            [ 8]  240 	ld	e, #0x04
    00000103 3E 09            [ 8]  241 	ld	a, #0x09
    00000105 CDr00r00         [24]  242 	call	_ClrStripX
                                    243 ;src/main.c:55: PrintNum8(9,4,drumID);
    00000108 FAr00r00         [16]  244 	ld	a, (_drumID)
    0000010B F5               [16]  245 	push	af
    0000010C 33               [ 8]  246 	inc	sp
    0000010D 1E 04            [ 8]  247 	ld	e, #0x04
    0000010F 3E 09            [ 8]  248 	ld	a, #0x09
    00000111 CDr00r00         [24]  249 	call	_PrintNum8
    00000114                        250 00109$:
                                    251 ;src/main.c:58: if(IN_WasKeyPressed(J_UP))
    00000114 3E 04            [ 8]  252 	ld	a, #0x04
    00000116 CDr00r00         [24]  253 	call	_IN_WasKeyPressed
    00000119 CB 47            [ 8]  254 	bit	0,a
    0000011B 28 06            [12]  255 	jr	Z, 00111$
                                    256 ;src/main.c:60: Snd_PlayMusic_V3(musStarWars);
    0000011D 11r00r00         [12]  257 	ld	de, #_musStarWars
    00000120 CDr00r00         [24]  258 	call	_Snd_PlayMusic_V3
    00000123                        259 00111$:
                                    260 ;src/main.c:63: if(IN_WasKeyPressed(J_START))
    00000123 3E 80            [ 8]  261 	ld	a, #0x80
    00000125 CDr00r00         [24]  262 	call	_IN_WasKeyPressed
    00000128 CB 47            [ 8]  263 	bit	0,a
    0000012A 28 06            [12]  264 	jr	Z, 00113$
                                    265 ;src/main.c:65: Snd_Drum(drumID);
    0000012C FAr00r00         [16]  266 	ld	a, (_drumID)
    0000012F CDr00r00         [24]  267 	call	_Snd_Drum
    00000132                        268 00113$:
                                    269 ;src/main.c:68: if(IN_WasKeyPressed(J_SELECT))
    00000132 3E 40            [ 8]  270 	ld	a, #0x40
    00000134 CDr00r00         [24]  271 	call	_IN_WasKeyPressed
    00000137 CB 47            [ 8]  272 	bit	0,a
    00000139 28 18            [12]  273 	jr	Z, 00115$
                                    274 ;src/main.c:70: ClrStripX(0,2,20);
    0000013B 3E 14            [ 8]  275 	ld	a, #0x14
    0000013D F5               [16]  276 	push	af
    0000013E 33               [ 8]  277 	inc	sp
    0000013F 1E 02            [ 8]  278 	ld	e, #0x02
    00000141 AF               [ 4]  279 	xor	a, a
    00000142 CDr00r00         [24]  280 	call	_ClrStripX
                                    281 ;src/main.c:71: PrintCentre(2,"The Drums");
    00000145 11r20r02         [12]  282 	ld	de, #___str_7
    00000148 3E 02            [ 8]  283 	ld	a, #0x02
    0000014A CDr00r00         [24]  284 	call	_PrintCentre
                                    285 ;src/main.c:72: Snd_PlayDrums(drmTwinkle2);
    0000014D 11r00r00         [12]  286 	ld	de, #_drmTwinkle2
    00000150 CDr00r00         [24]  287 	call	_Snd_PlayDrums
    00000153                        288 00115$:
                                    289 ;src/main.c:75: if(IN_WasKeyPressed(J_A))
    00000153 3E 10            [ 8]  290 	ld	a, #0x10
    00000155 CDr00r00         [24]  291 	call	_IN_WasKeyPressed
    00000158 CB 47            [ 8]  292 	bit	0,a
    0000015A 28 1A            [12]  293 	jr	Z, 00117$
                                    294 ;src/main.c:77: ClrStripX(0,2,20);
    0000015C 3E 14            [ 8]  295 	ld	a, #0x14
    0000015E F5               [16]  296 	push	af
    0000015F 33               [ 8]  297 	inc	sp
    00000160 1E 02            [ 8]  298 	ld	e, #0x02
    00000162 AF               [ 4]  299 	xor	a, a
    00000163 CDr00r00         [24]  300 	call	_ClrStripX
                                    301 ;src/main.c:78: Print(0,2,"Play Twinkle");
    00000166 11r2Ar02         [12]  302 	ld	de, #___str_8
    00000169 D5               [16]  303 	push	de
    0000016A 1E 02            [ 8]  304 	ld	e, #0x02
    0000016C AF               [ 4]  305 	xor	a, a
    0000016D CDr00r00         [24]  306 	call	_Print
                                    307 ;src/main.c:79: Snd_PlayMusic_V2(musTwinkle);
    00000170 11r00r00         [12]  308 	ld	de, #_musTwinkle
    00000173 CDr00r00         [24]  309 	call	_Snd_PlayMusic_V2
    00000176                        310 00117$:
                                    311 ;src/main.c:82: if(IN_WasKeyPressed(J_B))
    00000176 3E 20            [ 8]  312 	ld	a, #0x20
    00000178 CDr00r00         [24]  313 	call	_IN_WasKeyPressed
    0000017B CB 47            [ 8]  314 	bit	0,a
    0000017D 28 1F            [12]  315 	jr	Z, 00121$
                                    316 ;src/main.c:84: if(SndChan.bIsActive==false)
    0000017F 21r07r00         [12]  317 	ld	hl, #(_SndChan + 7)
    00000182 CB 46            [12]  318 	bit	0, (hl)
    00000184 20 18            [12]  319 	jr	NZ, 00121$
                                    320 ;src/main.c:86: ClrStripX(0,2,20);
    00000186 3E 14            [ 8]  321 	ld	a, #0x14
    00000188 F5               [16]  322 	push	af
    00000189 33               [ 8]  323 	inc	sp
    0000018A 1E 02            [ 8]  324 	ld	e, #0x02
    0000018C AF               [ 4]  325 	xor	a, a
    0000018D CDr00r00         [24]  326 	call	_ClrStripX
                                    327 ;src/main.c:87: PrintCentre(2,"Track 2");
    00000190 11r37r02         [12]  328 	ld	de, #___str_9
    00000193 3E 02            [ 8]  329 	ld	a, #0x02
    00000195 CDr00r00         [24]  330 	call	_PrintCentre
                                    331 ;src/main.c:88: Snd_PlayMusic_V3(musTrack2);
    00000198 11r00r00         [12]  332 	ld	de, #_musTrack2
    0000019B CDr00r00         [24]  333 	call	_Snd_PlayMusic_V3
    0000019E                        334 00121$:
                                    335 ;src/main.c:91: wait_vbl_done();
    0000019E CDr00r00         [24]  336 	call	_wait_vbl_done
                                    337 ;src/main.c:92: Snd_Update();
    000001A1 CDr00r00         [24]  338 	call	_Snd_Update
                                    339 ;src/main.c:94: }
    000001A4 C3rBEr00         [16]  340 	jp	00123$
    000001A7                        341 ___str_0:
    000001A7 44 72 75 6D 20 49 44   342 	.ascii "Drum ID="
             3D
    000001AF 00                     343 	.db 0x00
    000001B0                        344 ___str_1:
    000001B0 50 72 65 73 73 20 53   345 	.ascii "Press START for Drums"
             54 41 52 54 20 66 6F
             72 20 44 72 75 6D 73
    000001C5 00                     346 	.db 0x00
    000001C6                        347 ___str_2:
    000001C6 50 72 65 73 73 20 41   348 	.ascii "Press A for tune 1"
             20 66 6F 72 20 74 75
             6E 65 20 31
    000001D8 00                     349 	.db 0x00
    000001D9                        350 ___str_3:
    000001D9 50 72 65 73 73 20 42   351 	.ascii "Press B for tune 2"
             20 66 6F 72 20 74 75
             6E 65 20 32
    000001EB 00                     352 	.db 0x00
    000001EC                        353 ___str_4:
    000001EC 50 72 65 73 73 20 53   354 	.ascii "Press SELECT for the"
             45 4C 45 43 54 20 66
             6F 72 20 74 68 65
    00000200 00                     355 	.db 0x00
    00000201                        356 ___str_5:
    00000201 44 72 75 6D 20 54 72   357 	.ascii "Drum Track"
             61 63 6B
    0000020B 00                     358 	.db 0x00
    0000020C                        359 ___str_6:
    0000020C 50 72 65 73 73 20 55   360 	.ascii "Press Up for tune 3"
             70 20 66 6F 72 20 74
             75 6E 65 20 33
    0000021F 00                     361 	.db 0x00
    00000220                        362 ___str_7:
    00000220 54 68 65 20 44 72 75   363 	.ascii "The Drums"
             6D 73
    00000229 00                     364 	.db 0x00
    0000022A                        365 ___str_8:
    0000022A 50 6C 61 79 20 54 77   366 	.ascii "Play Twinkle"
             69 6E 6B 6C 65
    00000236 00                     367 	.db 0x00
    00000237                        368 ___str_9:
    00000237 54 72 61 63 6B 20 32   369 	.ascii "Track 2"
    0000023E 00                     370 	.db 0x00
                                    371 	.area _CODE
                                    372 	.area _INITIALIZER
    00000000                        373 __xinit__drumID:
    00000000 00                     374 	.db #0x00	; 0
                                    375 	.area _CABS (ABS)
