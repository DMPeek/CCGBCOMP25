                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.1 #15267 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module loadingFunctions
                                      6 	
                                      7 ;--------------------------------------------------------
                                      8 ; Public variables in this module
                                      9 ;--------------------------------------------------------
                                     10 	.globl _setupCharacter
                                     11 	.globl _moveCharacterWithLR
                                     12 	.globl _moveCharacter
                                     13 	.globl _set_sprite_data
                                     14 	.globl _set_bkg_tiles
                                     15 	.globl _set_bkg_data
                                     16 	.globl _LOSESCREEN
                                     17 	.globl _WINSCREEN
                                     18 	.globl _TRANSITIONSCREEN
                                     19 	.globl _MENUSCREEN
                                     20 	.globl _STARTSCREEN
                                     21 	.globl _STAGE
                                     22 	.globl _GAMEPLAY
                                     23 	.globl _loadStage
                                     24 	.globl _playerControl
                                     25 	.globl _loadStart
                                     26 	.globl _loadMenu
                                     27 	.globl _loadTransition
                                     28 	.globl _loadWin
                                     29 	.globl _loadLoss
                                     30 	.globl _hideCharacterSprites
                                     31 ;--------------------------------------------------------
                                     32 ; special function registers
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area _DATA
                                     38 ;--------------------------------------------------------
                                     39 ; ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area _INITIALIZED
    00000000                         42 _GAMEPLAY::
    00000000                         43 	.ds 2
    00000002                         44 _STAGE::
    00000002                         45 	.ds 2
    00000004                         46 _STARTSCREEN::
    00000004                         47 	.ds 2
    00000006                         48 _MENUSCREEN::
    00000006                         49 	.ds 2
    00000008                         50 _TRANSITIONSCREEN::
    00000008                         51 	.ds 2
    0000000A                         52 _WINSCREEN::
    0000000A                         53 	.ds 2
    0000000C                         54 _LOSESCREEN::
    0000000C                         55 	.ds 2
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area _DABS (ABS)
                                     60 ;--------------------------------------------------------
                                     61 ; global & static initialisations
                                     62 ;--------------------------------------------------------
                                     63 	.area _HOME
                                     64 	.area _GSINIT
                                     65 	.area _GSFINAL
                                     66 	.area _GSINIT
                                     67 ;--------------------------------------------------------
                                     68 ; Home
                                     69 ;--------------------------------------------------------
                                     70 	.area _HOME
                                     71 	.area _HOME
                                     72 ;--------------------------------------------------------
                                     73 ; code
                                     74 ;--------------------------------------------------------
                                     75 	.area _CODE
                                     76 ;scenes/loadingFunctions.c:11: void loadStage(void) {
                                     77 ;	---------------------------------
                                     78 ; Function loadStage
                                     79 ; ---------------------------------
    00000000                         80 _loadStage::
                                     81 ;scenes/loadingFunctions.c:13: set_sprite_data(0, viking_tileset_size, viking_tileset);
    00000000 11r00r00         [12]   82 	ld	de, #_viking_tileset
    00000003 D5               [16]   83 	push	de
    00000004 21 00 05         [12]   84 	ld	hl, #0x500
    00000007 E5               [16]   85 	push	hl
    00000008 CDr00r00         [24]   86 	call	_set_sprite_data
    0000000B E8 04            [16]   87 	add	sp, #4
                                     88 ;scenes/loadingFunctions.c:16: setupCharacter(&player1, 0, 2, 2, 0, 1, viking_tilemap);
    0000000D 01r00r00         [12]   89 	ld	bc, #_viking_tilemap+0
    00000010 11r00r00         [12]   90 	ld	de, #_player1+0
    00000013 D5               [16]   91 	push	de
    00000014 C5               [16]   92 	push	bc
    00000015 3E 01            [ 8]   93 	ld	a, #0x01
    00000017 F5               [16]   94 	push	af
    00000018 33               [ 8]   95 	inc	sp
    00000019 AF               [ 4]   96 	xor	a, a
    0000001A 67               [ 4]   97 	ld	h, a
    0000001B 2E 02            [ 8]   98 	ld	l, #0x02
    0000001D E5               [16]   99 	push	hl
    0000001E 3E 02            [ 8]  100 	ld	a, #0x02
    00000020 F5               [16]  101 	push	af
    00000021 33               [ 8]  102 	inc	sp
    00000022 AF               [ 4]  103 	xor	a, a
    00000023 CDr00r00         [24]  104 	call	_setupCharacter
    00000026 D1               [12]  105 	pop	de
                                    106 ;scenes/loadingFunctions.c:20: moveCharacter(&player1, 64, 112);
    00000027 3E 70            [ 8]  107 	ld	a, #0x70
    00000029 F5               [16]  108 	push	af
    0000002A 33               [ 8]  109 	inc	sp
    0000002B 3E 40            [ 8]  110 	ld	a, #0x40
    0000002D CDr00r00         [24]  111 	call	_moveCharacter
                                    112 ;scenes/loadingFunctions.c:24: set_bkg_data(0,7,Tiles);
    00000030 11r00r00         [12]  113 	ld	de, #_Tiles
    00000033 D5               [16]  114 	push	de
    00000034 21 00 07         [12]  115 	ld	hl, #0x700
    00000037 E5               [16]  116 	push	hl
    00000038 CDr00r00         [24]  117 	call	_set_bkg_data
    0000003B E8 04            [16]  118 	add	sp, #4
                                    119 ;scenes/loadingFunctions.c:25: set_bkg_tiles(0,0,SCREEN_W,SCREEN_H,TileMap);
    0000003D 11r00r00         [12]  120 	ld	de, #_TileMap
    00000040 D5               [16]  121 	push	de
    00000041 21 14 12         [12]  122 	ld	hl, #0x1214
    00000044 E5               [16]  123 	push	hl
    00000045 AF               [ 4]  124 	xor	a, a
    00000046 0F               [ 4]  125 	rrca
    00000047 F5               [16]  126 	push	af
    00000048 CDr00r00         [24]  127 	call	_set_bkg_tiles
    0000004B E8 06            [16]  128 	add	sp, #6
                                    129 ;scenes/loadingFunctions.c:27: GAMEPLAY = 1;
    0000004D 21r00r00         [12]  130 	ld	hl, #_GAMEPLAY
    00000050 3E 01            [ 8]  131 	ld	a, #0x01
    00000052 22               [ 8]  132 	ld	(hl+), a
    00000053 AF               [ 4]  133 	xor	a, a
    00000054 77               [ 8]  134 	ld	(hl), a
                                    135 ;scenes/loadingFunctions.c:28: STAGE = 1;
    00000055 21r02r00         [12]  136 	ld	hl, #_STAGE
    00000058 3E 01            [ 8]  137 	ld	a, #0x01
    0000005A 22               [ 8]  138 	ld	(hl+), a
    0000005B AF               [ 4]  139 	xor	a, a
    0000005C 77               [ 8]  140 	ld	(hl), a
                                    141 ;scenes/loadingFunctions.c:29: }
    0000005D C9               [16]  142 	ret
                                    143 ;scenes/loadingFunctions.c:31: void playerControl(void) {
                                    144 ;	---------------------------------
                                    145 ; Function playerControl
                                    146 ; ---------------------------------
    0000005E                        147 _playerControl::
                                    148 ;scenes/loadingFunctions.c:32: if (GAMEPLAY == 1){
    0000005E 21r00r00         [12]  149 	ld	hl, #_GAMEPLAY
    00000061 2A               [ 8]  150 	ld	a, (hl+)
    00000062 3D               [ 4]  151 	dec	a
    00000063 B6               [ 8]  152 	or	a, (hl)
    00000064 C0               [20]  153 	ret	NZ
                                    154 ;scenes/loadingFunctions.c:33: moveCharacterWithLR(&player1);
    00000065 11r00r00         [12]  155 	ld	de, #_player1
                                    156 ;scenes/loadingFunctions.c:36: }
    00000068 C3r00r00         [16]  157 	jp	_moveCharacterWithLR
                                    158 ;scenes/loadingFunctions.c:38: void loadStart(void) {
                                    159 ;	---------------------------------
                                    160 ; Function loadStart
                                    161 ; ---------------------------------
    0000006B                        162 _loadStart::
                                    163 ;scenes/loadingFunctions.c:39: STARTSCREEN = 1;
    0000006B 21r04r00         [12]  164 	ld	hl, #_STARTSCREEN
    0000006E 3E 01            [ 8]  165 	ld	a, #0x01
    00000070 22               [ 8]  166 	ld	(hl+), a
    00000071 AF               [ 4]  167 	xor	a, a
    00000072 77               [ 8]  168 	ld	(hl), a
                                    169 ;scenes/loadingFunctions.c:40: set_bkg_data(0,16,TileLabel);
    00000073 11r00r00         [12]  170 	ld	de, #_TileLabel
    00000076 D5               [16]  171 	push	de
    00000077 21 00 10         [12]  172 	ld	hl, #0x1000
    0000007A E5               [16]  173 	push	hl
    0000007B CDr00r00         [24]  174 	call	_set_bkg_data
    0000007E E8 04            [16]  175 	add	sp, #4
                                    176 ;scenes/loadingFunctions.c:41: set_bkg_tiles(0,0,SCREEN_W,SCREEN_H,startScreen);
    00000080 11r00r00         [12]  177 	ld	de, #_startScreen
    00000083 D5               [16]  178 	push	de
    00000084 21 14 12         [12]  179 	ld	hl, #0x1214
    00000087 E5               [16]  180 	push	hl
    00000088 AF               [ 4]  181 	xor	a, a
    00000089 0F               [ 4]  182 	rrca
    0000008A F5               [16]  183 	push	af
    0000008B CDr00r00         [24]  184 	call	_set_bkg_tiles
    0000008E E8 06            [16]  185 	add	sp, #6
                                    186 ;scenes/loadingFunctions.c:42: }
    00000090 C9               [16]  187 	ret
                                    188 ;scenes/loadingFunctions.c:44: void loadMenu(void) {
                                    189 ;	---------------------------------
                                    190 ; Function loadMenu
                                    191 ; ---------------------------------
    00000091                        192 _loadMenu::
                                    193 ;scenes/loadingFunctions.c:45: MENUSCREEN = 1;
    00000091 21r06r00         [12]  194 	ld	hl, #_MENUSCREEN
    00000094 3E 01            [ 8]  195 	ld	a, #0x01
    00000096 22               [ 8]  196 	ld	(hl+), a
    00000097 AF               [ 4]  197 	xor	a, a
    00000098 77               [ 8]  198 	ld	(hl), a
                                    199 ;scenes/loadingFunctions.c:46: set_bkg_data(0,16,TileLabel);
    00000099 11r00r00         [12]  200 	ld	de, #_TileLabel
    0000009C D5               [16]  201 	push	de
    0000009D 21 00 10         [12]  202 	ld	hl, #0x1000
    000000A0 E5               [16]  203 	push	hl
    000000A1 CDr00r00         [24]  204 	call	_set_bkg_data
    000000A4 E8 04            [16]  205 	add	sp, #4
                                    206 ;scenes/loadingFunctions.c:47: set_bkg_tiles(0,0,SCREEN_W,SCREEN_H,levelSelect);
    000000A6 11r00r00         [12]  207 	ld	de, #_levelSelect
    000000A9 D5               [16]  208 	push	de
    000000AA 21 14 12         [12]  209 	ld	hl, #0x1214
    000000AD E5               [16]  210 	push	hl
    000000AE AF               [ 4]  211 	xor	a, a
    000000AF 0F               [ 4]  212 	rrca
    000000B0 F5               [16]  213 	push	af
    000000B1 CDr00r00         [24]  214 	call	_set_bkg_tiles
    000000B4 E8 06            [16]  215 	add	sp, #6
                                    216 ;scenes/loadingFunctions.c:48: }
    000000B6 C9               [16]  217 	ret
                                    218 ;scenes/loadingFunctions.c:50: void loadTransition(void) {
                                    219 ;	---------------------------------
                                    220 ; Function loadTransition
                                    221 ; ---------------------------------
    000000B7                        222 _loadTransition::
                                    223 ;scenes/loadingFunctions.c:51: TRANSITIONSCREEN = 1;
    000000B7 21r08r00         [12]  224 	ld	hl, #_TRANSITIONSCREEN
    000000BA 3E 01            [ 8]  225 	ld	a, #0x01
    000000BC 22               [ 8]  226 	ld	(hl+), a
    000000BD AF               [ 4]  227 	xor	a, a
    000000BE 77               [ 8]  228 	ld	(hl), a
                                    229 ;scenes/loadingFunctions.c:52: set_bkg_data(0,16,TileLabel);
    000000BF 11r00r00         [12]  230 	ld	de, #_TileLabel
    000000C2 D5               [16]  231 	push	de
    000000C3 21 00 10         [12]  232 	ld	hl, #0x1000
    000000C6 E5               [16]  233 	push	hl
    000000C7 CDr00r00         [24]  234 	call	_set_bkg_data
    000000CA E8 04            [16]  235 	add	sp, #4
                                    236 ;scenes/loadingFunctions.c:53: set_bkg_tiles(0,0,SCREEN_W,SCREEN_H,stageTransition);
    000000CC 11r00r00         [12]  237 	ld	de, #_stageTransition
    000000CF D5               [16]  238 	push	de
    000000D0 21 14 12         [12]  239 	ld	hl, #0x1214
    000000D3 E5               [16]  240 	push	hl
    000000D4 AF               [ 4]  241 	xor	a, a
    000000D5 0F               [ 4]  242 	rrca
    000000D6 F5               [16]  243 	push	af
    000000D7 CDr00r00         [24]  244 	call	_set_bkg_tiles
    000000DA E8 06            [16]  245 	add	sp, #6
                                    246 ;scenes/loadingFunctions.c:54: }
    000000DC C9               [16]  247 	ret
                                    248 ;scenes/loadingFunctions.c:56: void loadWin(void) {
                                    249 ;	---------------------------------
                                    250 ; Function loadWin
                                    251 ; ---------------------------------
    000000DD                        252 _loadWin::
                                    253 ;scenes/loadingFunctions.c:57: WINSCREEN = 1;
    000000DD 21r0Ar00         [12]  254 	ld	hl, #_WINSCREEN
    000000E0 3E 01            [ 8]  255 	ld	a, #0x01
    000000E2 22               [ 8]  256 	ld	(hl+), a
    000000E3 AF               [ 4]  257 	xor	a, a
    000000E4 77               [ 8]  258 	ld	(hl), a
                                    259 ;scenes/loadingFunctions.c:58: set_bkg_data(0,16,TileLabel);
    000000E5 11r00r00         [12]  260 	ld	de, #_TileLabel
    000000E8 D5               [16]  261 	push	de
    000000E9 21 00 10         [12]  262 	ld	hl, #0x1000
    000000EC E5               [16]  263 	push	hl
    000000ED CDr00r00         [24]  264 	call	_set_bkg_data
    000000F0 E8 04            [16]  265 	add	sp, #4
                                    266 ;scenes/loadingFunctions.c:59: set_bkg_tiles(0,0,SCREEN_W,SCREEN_H,youWin);
    000000F2 11r00r00         [12]  267 	ld	de, #_youWin
    000000F5 D5               [16]  268 	push	de
    000000F6 21 14 12         [12]  269 	ld	hl, #0x1214
    000000F9 E5               [16]  270 	push	hl
    000000FA AF               [ 4]  271 	xor	a, a
    000000FB 0F               [ 4]  272 	rrca
    000000FC F5               [16]  273 	push	af
    000000FD CDr00r00         [24]  274 	call	_set_bkg_tiles
    00000100 E8 06            [16]  275 	add	sp, #6
                                    276 ;scenes/loadingFunctions.c:60: }
    00000102 C9               [16]  277 	ret
                                    278 ;scenes/loadingFunctions.c:62: void loadLoss(void) {
                                    279 ;	---------------------------------
                                    280 ; Function loadLoss
                                    281 ; ---------------------------------
    00000103                        282 _loadLoss::
                                    283 ;scenes/loadingFunctions.c:63: LOSESCREEN = 1;
    00000103 21r0Cr00         [12]  284 	ld	hl, #_LOSESCREEN
    00000106 3E 01            [ 8]  285 	ld	a, #0x01
    00000108 22               [ 8]  286 	ld	(hl+), a
    00000109 AF               [ 4]  287 	xor	a, a
    0000010A 77               [ 8]  288 	ld	(hl), a
                                    289 ;scenes/loadingFunctions.c:64: set_bkg_data(0,16,TileLabel);
    0000010B 11r00r00         [12]  290 	ld	de, #_TileLabel
    0000010E D5               [16]  291 	push	de
    0000010F 21 00 10         [12]  292 	ld	hl, #0x1000
    00000112 E5               [16]  293 	push	hl
    00000113 CDr00r00         [24]  294 	call	_set_bkg_data
    00000116 E8 04            [16]  295 	add	sp, #4
                                    296 ;scenes/loadingFunctions.c:65: set_bkg_tiles(0,0,SCREEN_W,SCREEN_H,youLose);
    00000118 11r00r00         [12]  297 	ld	de, #_youLose
    0000011B D5               [16]  298 	push	de
    0000011C 21 14 12         [12]  299 	ld	hl, #0x1214
    0000011F E5               [16]  300 	push	hl
    00000120 AF               [ 4]  301 	xor	a, a
    00000121 0F               [ 4]  302 	rrca
    00000122 F5               [16]  303 	push	af
    00000123 CDr00r00         [24]  304 	call	_set_bkg_tiles
    00000126 E8 06            [16]  305 	add	sp, #6
                                    306 ;scenes/loadingFunctions.c:66: }
    00000128 C9               [16]  307 	ret
                                    308 ;scenes/loadingFunctions.c:68: void hideCharacterSprites(Character *character) {
                                    309 ;	---------------------------------
                                    310 ; Function hideCharacterSprites
                                    311 ; ---------------------------------
    00000129                        312 _hideCharacterSprites::
    00000129 3B               [ 8]  313 	dec	sp
    0000012A 4B               [ 4]  314 	ld	c, e
    0000012B 42               [ 4]  315 	ld	b, d
                                    316 ;scenes/loadingFunctions.c:69: uint8_t spriteCount = character->spriteTileWidth * character->spriteTileHeight;
    0000012C 69               [ 4]  317 	ld	l, c
    0000012D 60               [ 4]  318 	ld	h, b
    0000012E 23               [ 8]  319 	inc	hl
    0000012F 7E               [ 8]  320 	ld	a, (hl)
    00000130 69               [ 4]  321 	ld	l, c
    00000131 60               [ 4]  322 	ld	h, b
    00000132 23               [ 8]  323 	inc	hl
    00000133 23               [ 8]  324 	inc	hl
    00000134 5E               [ 8]  325 	ld	e, (hl)
    00000135 C5               [16]  326 	push	bc
                                    327 ;scenes/loadingFunctions.c:70: for (uint8_t i = 0; i < spriteCount; i++) {
    00000136 CDr00r00         [24]  328 	call	__muluchar
    00000139 F8 02            [12]  329 	ldhl	sp,	#2
    0000013B 71               [ 8]  330 	ld	(hl), c
    0000013C C1               [12]  331 	pop	bc
    0000013D 1E 00            [ 8]  332 	ld	e, #0x00
    0000013F                        333 00104$:
    0000013F 7B               [ 4]  334 	ld	a, e
    00000140 F8 00            [12]  335 	ldhl	sp,	#0
    00000142 96               [ 8]  336 	sub	a, (hl)
    00000143 30 14            [12]  337 	jr	NC, 00106$
                                    338 ;scenes/loadingFunctions.c:71: move_sprite(character->spriteId + i, 0, 0); // Move offscreen
    00000145 0A               [ 8]  339 	ld	a, (bc)
    00000146 83               [ 4]  340 	add	a, e
    00000147 57               [ 4]  341 	ld	d, a
                                    342 ;/home/dij/d/c/gbdk/include/gb/gb.h:1973: OAM_item_t * itm = &shadow_OAM[nb];
    00000148 AF               [ 4]  343 	xor	a, a
    00000149 6A               [ 4]  344 	ld	l, d
    0000014A 67               [ 4]  345 	ld	h, a
    0000014B 29               [ 8]  346 	add	hl, hl
    0000014C 29               [ 8]  347 	add	hl, hl
    0000014D D5               [16]  348 	push	de
    0000014E 11r00r00         [12]  349 	ld	de, #_shadow_OAM
    00000151 19               [ 8]  350 	add	hl, de
    00000152 D1               [12]  351 	pop	de
                                    352 ;/home/dij/d/c/gbdk/include/gb/gb.h:1974: itm->y=y, itm->x=x;
    00000153 AF               [ 4]  353 	xor	a, a
    00000154 22               [ 8]  354 	ld	(hl+), a
    00000155 77               [ 8]  355 	ld	(hl), a
                                    356 ;scenes/loadingFunctions.c:70: for (uint8_t i = 0; i < spriteCount; i++) {
    00000156 1C               [ 4]  357 	inc	e
    00000157 18 E6            [12]  358 	jr	00104$
    00000159                        359 00106$:
                                    360 ;scenes/loadingFunctions.c:73: }
    00000159 33               [ 8]  361 	inc	sp
    0000015A C9               [16]  362 	ret
                                    363 	.area _CODE
                                    364 	.area _INITIALIZER
    00000000                        365 __xinit__GAMEPLAY:
    00000000 00 00                  366 	.dw #0x0000
    00000002                        367 __xinit__STAGE:
    00000002 00 00                  368 	.dw #0x0000
    00000004                        369 __xinit__STARTSCREEN:
    00000004 00 00                  370 	.dw #0x0000
    00000006                        371 __xinit__MENUSCREEN:
    00000006 00 00                  372 	.dw #0x0000
    00000008                        373 __xinit__TRANSITIONSCREEN:
    00000008 00 00                  374 	.dw #0x0000
    0000000A                        375 __xinit__WINSCREEN:
    0000000A 00 00                  376 	.dw #0x0000
    0000000C                        377 __xinit__LOSESCREEN:
    0000000C 00 00                  378 	.dw #0x0000
                                    379 	.area _CABS (ABS)
