                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.1 #15267 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	
                                      7 ;--------------------------------------------------------
                                      8 ; Public variables in this module
                                      9 ;--------------------------------------------------------
                                     10 	.globl _testscreen
                                     11 	.globl _splashscreen
                                     12 	.globl _main
                                     13 	.globl _init_bkg
                                     14 	.globl _set_bkg_tiles
                                     15 	.globl _set_bkg_data
                                     16 	.globl _joypad
                                     17 	.globl _delay
                                     18 	.globl _test
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _DATA
    00000000                         26 _test::
    00000000                         27 	.ds 2
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _INITIALIZED
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DABS (ABS)
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area _HOME
                                     40 	.area _GSINIT
                                     41 	.area _GSFINAL
                                     42 	.area _GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area _HOME
                                     47 	.area _HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area _CODE
                                     52 ;src/main.c:8: void main()
                                     53 ;	---------------------------------
                                     54 ; Function main
                                     55 ; ---------------------------------
    00000000                         56 _main::
                                     57 ;src/main.c:12: splashscreen();
    00000000 CDr37r00         [24]   58 	call	_splashscreen
                                     59 ;src/main.c:15: SHOW_BKG;
    00000003 F0r00            [12]   60 	ldh	a, (_LCDC_REG + 0)
    00000005 F6 01            [ 8]   61 	or	a, #0x01
    00000007 E0r00            [12]   62 	ldh	(_LCDC_REG + 0), a
                                     63 ;src/main.c:16: DISPLAY_ON;
    00000009 F0r00            [12]   64 	ldh	a, (_LCDC_REG + 0)
    0000000B F6 80            [ 8]   65 	or	a, #0x80
    0000000D E0r00            [12]   66 	ldh	(_LCDC_REG + 0), a
                                     67 ;src/main.c:18: while (1)
    0000000F                         68 00108$:
                                     69 ;src/main.c:21: mButtons = joypad();
    0000000F CDr00r00         [24]   70 	call	_joypad
    00000012 4F               [ 4]   71 	ld	c, a
                                     72 ;src/main.c:23: if (mButtons & J_A)
    00000013 CB 61            [ 8]   73 	bit	4, c
    00000015 28 05            [12]   74 	jr	Z, 00102$
                                     75 ;src/main.c:24: splashscreen();
    00000017 C5               [16]   76 	push	bc
    00000018 CDr37r00         [24]   77 	call	_splashscreen
    0000001B C1               [12]   78 	pop	bc
    0000001C                         79 00102$:
                                     80 ;src/main.c:25: if (mButtons & J_B)
    0000001C CB 69            [ 8]   81 	bit	5, c
    0000001E 28 03            [12]   82 	jr	Z, 00104$
                                     83 ;src/main.c:26: testscreen();
    00000020 CDr61r00         [24]   84 	call	_testscreen
    00000023                         85 00104$:
                                     86 ;src/main.c:28: if (test)
    00000023 21r01r00         [12]   87 	ld	hl, #_test + 1
    00000026 3A               [ 8]   88 	ld	a, (hl-)
    00000027 B6               [ 8]   89 	or	a, (hl)
    00000028 28 05            [12]   90 	jr	Z, 00106$
                                     91 ;/home/dij/d/c/gbdk/include/gb/gb.h:1475: SCX_REG+=x, SCY_REG+=y;
    0000002A F0r00            [12]   92 	ldh	a, (_SCX_REG + 0)
    0000002C 3C               [ 4]   93 	inc	a
    0000002D E0r00            [12]   94 	ldh	(_SCX_REG + 0), a
                                     95 ;src/main.c:29: scroll_bkg(1, 0);
    0000002F                         96 00106$:
                                     97 ;src/main.c:30: delay(200);
    0000002F 11 C8 00         [12]   98 	ld	de, #0x00c8
    00000032 CDr00r00         [24]   99 	call	_delay
                                    100 ;src/main.c:32: }
    00000035 18 D8            [12]  101 	jr	00108$
                                    102 ;src/main.c:34: void splashscreen() {
                                    103 ;	---------------------------------
                                    104 ; Function splashscreen
                                    105 ; ---------------------------------
    00000037                        106 _splashscreen::
                                    107 ;src/main.c:35: test = 0;
    00000037 AF               [ 4]  108 	xor	a, a
    00000038 21r00r00         [12]  109 	ld	hl, #_test
    0000003B 22               [ 8]  110 	ld	(hl+), a
    0000003C 77               [ 8]  111 	ld	(hl), a
                                    112 ;/home/dij/d/c/gbdk/include/gb/gb.h:1461: SCX_REG=x, SCY_REG=y;
    0000003D AF               [ 4]  113 	xor	a, a
    0000003E E0r00            [12]  114 	ldh	(_SCX_REG + 0), a
    00000040 AF               [ 4]  115 	xor	a, a
    00000041 E0r00            [12]  116 	ldh	(_SCY_REG + 0), a
                                    117 ;src/main.c:38: set_bkg_data(0, splashscreen_tileset_size, splashscreen_tileset);
    00000043 11r00r00         [12]  118 	ld	de, #_splashscreen_tileset
    00000046 D5               [16]  119 	push	de
    00000047 21 00 E0         [12]  120 	ld	hl, #0xe000
    0000004A E5               [16]  121 	push	hl
    0000004B CDr00r00         [24]  122 	call	_set_bkg_data
    0000004E E8 04            [16]  123 	add	sp, #4
                                    124 ;src/main.c:41: set_bkg_tiles(0, 0, 20, 18, splashscreen_tilemap);
    00000050 11r00r00         [12]  125 	ld	de, #_splashscreen_tilemap
    00000053 D5               [16]  126 	push	de
    00000054 21 14 12         [12]  127 	ld	hl, #0x1214
    00000057 E5               [16]  128 	push	hl
    00000058 AF               [ 4]  129 	xor	a, a
    00000059 0F               [ 4]  130 	rrca
    0000005A F5               [16]  131 	push	af
    0000005B CDr00r00         [24]  132 	call	_set_bkg_tiles
    0000005E E8 06            [16]  133 	add	sp, #6
                                    134 ;src/main.c:42: }
    00000060 C9               [16]  135 	ret
                                    136 ;src/main.c:44: void testscreen() {
                                    137 ;	---------------------------------
                                    138 ; Function testscreen
                                    139 ; ---------------------------------
    00000061                        140 _testscreen::
                                    141 ;src/main.c:45: test = 1;
    00000061 21r00r00         [12]  142 	ld	hl, #_test
    00000064 3E 01            [ 8]  143 	ld	a, #0x01
    00000066 22               [ 8]  144 	ld	(hl+), a
    00000067 AF               [ 4]  145 	xor	a, a
    00000068 77               [ 8]  146 	ld	(hl), a
                                    147 ;src/main.c:47: set_bkg_data(0, 11, NumberTiles);
    00000069 11r00r00         [12]  148 	ld	de, #_NumberTiles
    0000006C D5               [16]  149 	push	de
    0000006D 21 00 0B         [12]  150 	ld	hl, #0xb00
    00000070 E5               [16]  151 	push	hl
    00000071 CDr00r00         [24]  152 	call	_set_bkg_data
    00000074 E8 04            [16]  153 	add	sp, #4
                                    154 ;src/main.c:50: init_bkg(4);
    00000076 3E 04            [ 8]  155 	ld	a, #0x04
    00000078 F5               [16]  156 	push	af
    00000079 33               [ 8]  157 	inc	sp
    0000007A CDr00r00         [24]  158 	call	_init_bkg
    0000007D 33               [ 8]  159 	inc	sp
                                    160 ;src/main.c:52: }
    0000007E C9               [16]  161 	ret
                                    162 	.area _CODE
                                    163 	.area _INITIALIZER
                                    164 	.area _CABS (ABS)
